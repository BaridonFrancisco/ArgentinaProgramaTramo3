/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package ejercicio4;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Owner
 */
public class listarPorRubro extends javax.swing.JInternalFrame {
    
    DefaultTableModel modeloTabla=new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int f,int c){
                return false;
                }
        
    };

    /**
     * Creates new form listarPorRubro
     */
    public listarPorRubro() {
        initComponents();
        cargarModel();
        cargarColumnas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jBoxModel = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtablaPorRubro = new javax.swing.JTable();

        setClosable(true);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Listar por rubro");

        jLabel2.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel2.setText("Elija el rubro");

        jBoxModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBoxModelActionPerformed(evt);
            }
        });

        jtablaPorRubro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtablaPorRubro);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(213, 213, 213)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jBoxModel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jBoxModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBoxModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBoxModelActionPerformed
        // TODO add your handling code here:
        var cateoriaSeleccionada=(Categorias)jBoxModel.getSelectedItem();
        borrarFila();
        for(Producto p:menuFrame.productosTreeset){
            if(cateoriaSeleccionada.equals(p.getRubro())){
                modeloTabla.addRow(new Object[]{
                    p.getCodigo(),p.getDescripcion(),p.getPrecio(),p.getStock()
                });
            }
        }
        
    }//GEN-LAST:event_jBoxModelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Categorias> jBoxModel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtablaPorRubro;
    // End of variables declaration//GEN-END:variables

private void cargarModel(){
    jBoxModel.addItem(Categorias.COMESTIBLES); // cargar categorias al model box
    jBoxModel.addItem(Categorias.PERFUMERIA);
    jBoxModel.addItem(Categorias.LIMPIEZA);
}
private void cargarColumnas(){
    modeloTabla.addColumn("Codigo"); // cargar columna 0 
    modeloTabla.addColumn("Descripcion");
    modeloTabla.addColumn("Precio");
    modeloTabla.addColumn("Stock");
    jtablaPorRubro.setModel(modeloTabla); // establecer modelo
}

private void borrarFila(){
   var cantFilas=modeloTabla.getRowCount()-1;
   for(int f=cantFilas;f>=0;f--){
       modeloTabla.removeRow(f);
   }
}
}
