/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package ejercicio4;

import java.awt.HeadlessException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Owner
 */
public class jInternalTable extends javax.swing.JInternalFrame {

    DefaultTableModel modeloDefaultTabla = new DefaultTableModel();
    /**
     * Creates new form jInternalTable
     */
    public jInternalTable() {
        initComponents();
        cargarColumnas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTablaPrecios = new javax.swing.JTable();
        jListarPrecios = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jlimiteInferior = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jlimiteSuperior = new javax.swing.JTextField();

        setClosable(true);

        jTablaPrecios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTablaPrecios);

        jListarPrecios.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jListarPrecios.setText("Listar Por precio");

        jLabel2.setText("Entre $");

        jlimiteInferior.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jlimiteInferiorKeyReleased(evt);
            }
        });

        jLabel3.setText("y");

        jlimiteSuperior.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jlimiteSuperiorKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jlimiteInferior, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlimiteSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(jListarPrecios)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jListarPrecios)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jlimiteInferior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jlimiteSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(204, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jlimiteInferiorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jlimiteInferiorKeyReleased
        cargarLimites();


    }//GEN-LAST:event_jlimiteInferiorKeyReleased

    private void cargarLimites() throws HeadlessException {
        // TODO add your handling code here:
        borrarFila();
        var limiteInferior = jlimiteInferior.getText();
        var limiteSuperior = jlimiteSuperior.getText();
        if (!(limiteInferior.isEmpty()) && !(limiteSuperior.isEmpty())) {
            try {
                int sup = Integer.parseInt(limiteSuperior);
                int inf = Integer.parseInt(limiteInferior);
                if (sup < 0 || inf < 0 ) {
                    throw new RuntimeException("Numero invalido intentelo nuevamente");
                }
                if(inf<sup && sup>inf){
                    for(Producto p:menuFrame.productosTreeset){
                        if(p.getPrecio()>=inf && p.getPrecio()<=sup){
                            modeloDefaultTabla.addRow(new Object[]{
                                p.getCodigo(),p.getDescripcion(),p.getPrecio(),p.getStock()
                            });
                        }
                    }
                    
                }
                
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this,"No ha ingresado un numero", "Number error",JOptionPane.ERROR_MESSAGE);
            }catch(RuntimeException e){
                JOptionPane.showMessageDialog(this,e.getMessage(), "Valor invalido",JOptionPane.ERROR_MESSAGE);
            }catch(Exception e){
                JOptionPane.showMessageDialog(this,"ups ha ocurrido un error :(", "Error ",JOptionPane.ERROR_MESSAGE);
            }
            
        }
    }

    private void jlimiteSuperiorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jlimiteSuperiorKeyReleased
        // TODO add your handling code here:
        cargarLimites();
    }//GEN-LAST:event_jlimiteSuperiorKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jListarPrecios;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablaPrecios;
    private javax.swing.JTextField jlimiteInferior;
    private javax.swing.JTextField jlimiteSuperior;
    // End of variables declaration//GEN-END:variables
private void cargarColumnas() {
        modeloDefaultTabla.addColumn("Codigo");
        modeloDefaultTabla.addColumn("Descripcion");
        modeloDefaultTabla.addColumn("Precio");
        modeloDefaultTabla.addColumn("Stock");
        jTablaPrecios.setModel(modeloDefaultTabla);
    }

private void borrarFila(){
   var cantFilas=jTablaPrecios.getRowCount()-1;
   for(int f=cantFilas;f>=0;f--){
       modeloDefaultTabla.removeRow(f);
   }
}

}
